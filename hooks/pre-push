#!/usr/bin/env bash
set -euo pipefail

remote_name="$1"
remote_url="$2"

# Check the remote name
if [[ "$remote_name" != "org" ]]; then
    exit 0
fi

echo "→ Push para a organização. Sincronizando branch universidade..."

# Get the menssage commit and complement
read -r local_ref local_sha remote_ref remote_sha || true
commit_subject="$(git log -1 --format=%s "$local_sha")"
sync_msg="Sync automático: $(date '+%F %T')"
full_msg="${commit_subject}

${sync_msg}"

# Create the worktree
git worktree prune
tmp_dir=$(mktemp -d)
git worktree add --quiet --force "$tmp_dir" university

main_branch="$(git symbolic-ref --short HEAD)"

pushd "$tmp_dir" >/dev/null
    git rm -r --cached . >/dev/null 2>&1 || true
    find . -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} +

    # pull the neccesery files
    git checkout "$main_branch" -- profile/README.md assets hooks >/dev/null

    mkdir -p profile
    mv profile/README.md README.md
    rm -rf profile

    git add -A
    if ! git diff --cached --quiet; then
        git commit -m "$full_msg" >/dev/null
    fi
popd >/dev/null

git push --force fac university:main

git worktree remove --force "$tmp_dir"
#!/usr/bin/env bash
set -euo pipefail

remote_name="$1"
remote_url="$2"

# Check the remote name
if [[ "$remote_name" != "org" ]]; then
    exit 0
fi

echo "→ Push para a organização. Sincronizando branch universidade..."

# Get the menssage commit and complement
if read -r local_ref local_sha remote_ref remote_sha && [ -n "$local_sha" ]; then
    if [ "$local_sha" = "$remote_sha" ]; then
        exit 0
    fi
    commit_subject="$(git log -1 --format=%s "$local_sha")"
else
    exit 0
fi
sync_msg="Sync automático: $(date '+%F %T')"
full_msg="${commit_subject}

${sync_msg}"

# Create the worktree
git worktree prune
tmp_dir=$(mktemp -d)
git worktree add --quiet --force "$tmp_dir" university

main_branch="$(git symbolic-ref --short HEAD)"

pushd "$tmp_dir" >/dev/null
    git rm -r --cached . >/dev/null 2>&1 || true
    find . -mindepth 1 -maxdepth 1 ! -name '.git' -exec rm -rf {} +

    # pull the neccesery files
    git checkout "$main_branch" -- profile/README.md assets hooks >/dev/null

    mkdir -p profile
    mv profile/README.md README.md
    rm -rf profile

    git add -A
    if ! git diff --cached --quiet; then
        git commit -m "$full_msg" >/dev/null
    fi
popd >/dev/null

git push --force fac university:main

git worktree remove --force "$tmp_dir"
